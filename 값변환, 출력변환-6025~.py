#6025
# 정수 2개를 입력받아
# 합을 출력하는 프로그램을 작성해보자.

# 예시
# a, b = input().split()
# c = int(a) + int(b)
# print(c)

# 참고
# 입력되는 값은 기본적으로 문자열로 인식된다.

# 문자열 + 문자열은 두 문자열을 합친 문자열을 만든다.
# 숫자로 구성된 문자열이나 실수를 정수(integer) 값으로 바꾸기 위해서는 int( ) 를 사용할 수 있다.
# 수 + 수의 결과는 합(addition)이 계산된다.
a, b = input().split()
c = int(a) + int(b)
print(c)

#6026
# 실수 2개를 입력받아
# 합을 출력하는 프로그램을 작성해보자.

# 참고
# 입력되는 값은 기본적으로 문자열로 인식된다.

# 숫자로 구성된 문자열이나 정수를 실수(real number) 값으로 바꾸기 위해서는 float( ) 를 사용할 수 있다.
# 소숫점(.)은 그 위치가 정해져있지 않고 이리저리 둥둥 떠다니므로, floating point라고 부른다.
a = input()
b = input()
c = float(a) + float(b)
print(c)

#6027
# 10진수를 입력받아 16진수(hexadecimal)로 출력해보자.

# 예시
# a = input()
# n = int(a)            #입력된 a를 10진수 값으로 변환해 변수 n에 저장
# print('%x'% n)  #n에 저장되어있는 값을 16진수(hexadecimal) 소문자 형태 문자열로 출력

# 참고
# 10진수 형태로 입력받고
# %x로 출력하면 16진수(hexadecimal) 소문자로 출력된다.
# (%o로 출력하면 8진수(octal) 문자열로 출력된다.)

# 10진법은 한 자리에 10개(0 1 2 3 4 5 6 7 8 9)의 문자를 사용하고,
# 16진법은 영문 소문자를 사용하는 경우에 한 자리에 16개(0 1 2 3 4 5 6 7 8 9 a b c d e f)의 문자를 사용한다.
# 16진수 a는 10진수의 10, b는 11, c는 12 ... 와 같다.
a = input()
b = int(a)
print('%x' % b)

#6028
# 10진수를 입력받아 16진수(hexadecimal)로 출력해보자.

# 예시
# print('%X' % n)  #n에 저장되어있는 값을 16진수 대문자 형태 문자열로 출력

# 참고
# 10진수 형태로 입력받고
# %X로 출력하면 16진수(hexadecimal)대문자로 출력된다.

# 16진법은 영문 소문자를 사용하는 경우에 한 자리에 16개(0 1 2 3 4 5 6 7 8 9 A B C D E F)의 문자를 사용한다.
# 16진수 A는 10진수의 10, B는 11, C는 12 ... 와 같다.
a = input()
b = int(a)
print('%X' % b)
#6009
# 문자(character)는
# 0~9, a~z, A~Z, !, @, #, {, [, <, ... 과 같이 
# 길이가 1인 기호라고 할 수 있다.

# 변수에 문자 1개를 저장한 후
# 변수에 저장되어 있는 문자를 그대로 출력해보자.

# 예시
# c = input()
# print(c)

# 와 같은 형태로 가능하다.

# 참고
# input() 을 사용하면 키보드로 입력한 값을 가져온다.
# 변수 = input()
# 를 실행시키면 키보드로 입력한 값을 왼쪽의 변수에 저장한다.

# 변수(variable)는 어떤 값(정수, 실수, 문자, 문자열 등)을 저장할 수 있는 공간의 별명이라고 할 수 있다.
# 어떤 값을 저장했다가 다시 사용하기 위해서 변수를 사용한다. 저장할 내용들이 많으면 필요한 만큼 변수를 만들어 사용하면 된다.
# 변수는 포스트 잇과 같은 메모지에 필요한 내용을 적어두었다가, 필요할 때 찾아 살펴보는 것과 비슷하다.

# 대수학(algebra)에서는 어떤 수나 값을 대신해 문자로 표현하는 방법을 사용한다.
# 프로그래밍언어에서도 마찬가지로 자신이 알아보기 쉬운 짧은 단어를 사용하는 것이 좋다. 예시) y = x + 3
a = input()
print(a)

#6010
# 정수(integer)는
# 양의 정수(1, 2, 3, 4, 5, ...), 음의 정수(-1, -2, -3, -4, -5, ...), 0 과 같이
# 소숫점 아래에 수가 없는 수라고 할 수 있다.

# 변수에 정수값을 저장한 후 정수로 변환하여 출력해보자.

# 예시
# n = input()
# n = int(n)
# print(n)
# 와 같은 형태로 가능하다.

# 참고
# input() 을 사용하면 키보드로 입력(input)한 값을 가져온다.

# 변수 = input()
# 를 실행시키면 키보드로 입력한 값을 왼쪽의 변수에 저장(할당, asign) 한다.

# 변수는 어떤 값(정수, 실수, 문자, 문자열 등)을 저장할 수 있는 공간의 별명이라고 할 수 있다.
# 변수는 일반적으로 알파벳(a~z, A~Z)이나 언더라인 '_'으로 시작하는 단어를 사용하고, 숫자(0~9)로 시작하는 단어는 사용할 수 없다.
# 숫자로 시작하는 단어는 수로 인식하기 때문이다.
# (python의 경우 한글 변수도 사용할 수 있지만, 영문을 사용하는 것이 예상하지 못하는 오류를 방지할 수 있다.)

# '=' 연산자는 오른쪽의 계산 결과 값을 왼쪽의 변수에 저장하라는 의미의 대입연산자이다.
# 왼쪽의 결과값과 오른쪽의 결과값이 같다는 의미의 수학식의 등호와는 의미가 다르다.
a = input()
a = int(a)
print(a)

#6011
# 숫자(0~9)와 소수점(.)을 사용해 표현한 수를 실수(real number)라고 한다.

# 변수에 실수값을 저장한 후
# 변수에 저장되어 있는 값을 그대로 출력해보자.

# 예시
# f = input()
# f = float(f)
# print(f)
# 와 같은 형태로 가능하다.

# 참고
# 어떤 값을 1개 입력받아 계산하거나 처리해야하는 경우라면, 입력되는 값이 수인지 문자열인지 구분해야한다.
# 조금 생각해보면, 키보드로 입력한 9라는 값이 문자 9인지, 정수 9인지, 실수 9.0인지 컴퓨터가 스스로 구분하지 못한다는 것을 알 수 있다.
# 컴퓨터 내부에서는 2진 체계의 디지털 형태로만 저장할 수 있기 때문에 정수, 문자, 실수 등의 저장 방법이 다르다.
# 입력한 값을 원하는 형태로 계산하거나 처리하기 위해서는 입력한 값이 어떤 데이터(정수, 문자, 실수, 문자열 등)인지 명확히 구분해 주어야 한다.
a = input()
a = float(a)
print(a)

#6012
# 줄을 바꿔 정수(integer) 2개를 입력받아 줄을 바꿔 출력해보자.

# 예시
# a = input() 
# b = input()
# a=int(a)
# b=int(b)
# print(a)
# print(b)
# 과 같은 방법으로 가능하다.
a = input()
b = input()
print(a)
print(b)

#6013
# 줄을 바꿔 문자(character) 2개를 입력받고, 순서를 바꿔 한 줄씩 출력해보자.
a = input()
b = input()
print(b)
print(a)

#6014
# 실수(real number) 1개를 입력받아 줄을 바꿔 3번 출력해보자.

# 예시
# ...
# print(f)  #f에 저장되어있는 값을 출력하고 줄을 바꾼다.
# print(f)
# print(f)
# 와 같은 방법으로 3번 줄을 바꿔 출력할 수 있다.

# 참고
# python 코드 사이에 설명(주석)을 작성해 넣고 싶은 경우 샵('#') 기호를 사용하면 된다.
# #가 시작된 위치부터 그 줄을 마지막까지는 python 인터프리터에 의해서 실행되지 않는다.
# 소스코드 부분 부분에 설명, 내용, 표시를 한 줄 설명으로 넣을 경우에 편리하게 사용할 수 있다.
# 여러 줄로 설명을 넣는 방법도 있다. 스스로 찾아보자!
a = input()
a = float(a)
print(a)
print(a)
print(a)

#6015
# 공백을 두고 입력된정수(integer) 2개를 입력받아 줄을 바꿔 출력해보자.

# 예시
# a, b = input().split()
# a=int(a)
# b=int(b)
# print(a)
# print(b)
# 과 같은 방법으로 두 정수를 입력받아 출력할 수 있다.

# 참고
# python의 input()은 한 줄 단위로 입력을 받는다.
# input().split() 를 사용하면, 공백을 기준으로 입력된 값들을 나누어(split) 자른다.
# a, b = 1, 2
# 를 실행하면, a에는 1 b에는 2가 저장된다.
# (주의 : 하지만, 다른 일반적인 프로그래밍언어에서는 이러한 방법을 지원하지 않기 때문에 a=1, b=2 를 한 번에 하나씩 따로 실행시켜야 한다.)